# ===================================================================
# APPLICATION CUSTOM PROPERTIES
# ===================================================================
# ===================================================================
# COMMON SPRING BOOT PROPERTIES
# Most of these are place holder, edit as needed for you project
# ===================================================================

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# SPRING CONFIG (ConfigFileApplicationListener)
#spring.config.name= # config file name (default to 'application')
#spring.config.location= # location of config file

# PROFILES
#spring.profiles.active= # comma list of active profiles

# APPLICATION SETTINGS (SpringApplication)
#spring.main.sources=
#spring.main.web-environment= # detect by default
#spring.main.show-banner=true
#spring.main....= # see class for all properties

# LOGGING
#logging.path=/var/log/aim
#logging.file=aud.log
#logging.config=/home/ubuntu/config/logback.xml
#logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)

# IDENTITY (ContextIdApplicationContextInitializer)
#spring.application.name=
#spring.application.index=  

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.port=8443
#server.address= # bind to a specific NIC
# server session timeout in minutes
server.session-timeout=20
#server.context-path= # the context path, defaults to '/'
#server.servlet-path= # the servlet path, defaults to '/'
#server.ssl.client-auth= # want or need
#server.ssl.key-alias=tomcat
#server.ssl.key-password=
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=aimaudit
#server.ssl.key-store-provider=SunJSSE
#server.ssl.key-store-type=PKCS12
#server.ssl.protocol=TLS
#server.ssl.trust-store=
#server.ssl.trust-store-password=
#server.ssl.trust-store-provider=
#server.ssl.trust-store-type=
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.internal-proxies=10\.\d{1,3}\.\d{1,3}\.\d{1,3}|\
#        192\.168\.\d{1,3}\.\d{1,3}|\
#        169\.254\.\d{1,3}\.\d{1,3}|\
#        127\.\d{1,3}\.\d{1,3}\.\d{1,3} # regular expression matching trusted IP addresses
#server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
#server.tomcat.port-header= # front end proxy port header
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-threads = 0 # number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding

# SPRING MVC (HttpMapperProperties)
#http.mappers.json-pretty-print=false # pretty print JSON
#http.mappers.json-sort-keys=false # sort keys
#spring.mvc.locale= # set fixed locale, e.g. en_UK
#spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy
#spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
#spring.view.prefix= # MVC view prefix
#spring.view.suffix= # ... and suffix
#spring.resources.cache-period= # cache timeouts in headers sent to browser
#spring.resources.add-mappings=true # if default mappings should be added

#MultipartConfigElement
multipart.maxFileSize: 100MB
multipart.maxRequestSize: 100MB

# THYMELEAF (ThymeleafAutoConfiguration)
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html # ;charset=<encoding> is added
#spring.thymeleaf.cache=false
#spring.thymeleaf.cache=true # set to false for hot refresh

# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
#spring.messages.basename=messages
#spring.messages.cacheSeconds=-1
#spring.messages.encoding=UTF-8

# SECURITY (SecurityProperties)
#security.user.name=user 
#security.user.password=user
#security.user.role=ADMIN,USER
#security.require-ssl=false # advanced settings ...
#security.enable-csrf=false
#security.basic.enabled=true
#security.basic.realm=Spring
#security.basic.path= # /**
#security.headers.xss=false
#security.headers.cache=false
#security.headers.frame=false
#security.headers.content-type=false
#security.headers.hsts=all # none / domain / all
#security.sessions=stateless # always / never / if_required / stateless
#security.ignored=false

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.name= # name of the data source
#spring.datasource.initialize=true # populate using data.sql
#spring.datasource.schema= # a schema (DDL) script resource reference
#spring.datasource.data= # a data (DML) script resource reference
#spring.datasource.sql-script-encoding= # a charset for reading SQL scripts
#spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
#spring.datasource.continue-on-error=false # continue even if can't be initialized
#spring.datasource.separator=; # statement separator in SQL initialization scripts

#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521/ORCL
#spring.datasource.username=AUD_USER
#spring.datasource.password=AUD_USER
#liquibase.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#liquibase.datasource.url=jdbc:oracle:thin:@localhost:1521/ORCL
#liquibase.datasource.username=AUD_APP
#liquibase.datasource.password=AUD_APP

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:teacher

spring.datasource.max-active=100
spring.datasource.max-idle=30
spring.datasource.min-idle=10
spring.datasource.initial-size=10
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=true
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=false
#spring.datasource.time-between-eviction-runs-millis=
#spring.datasource.min-evictable-idle-time-millis=
spring.datasource.max-wait=10000

# MONGODB (MongoProperties)
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.db=test
#spring.data.mongodb.uri=mongodb://localhost/test # connection URL
#spring.data.mongo.repositories.enabled=true # if spring data repository support is enabled

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.jpa.properties.*= # properties to set on the JPA connection
#spring.jpa.open-in-view=true
spring.jpa.show-sql=false
#spring.jpa.database-platform=
#spring.jpa.database=
# ignored by Hibernate, might be useful for other vendors
spring.jpa.generate-ddl=false 
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.hibernate.ddl-auto=none
spring.data.jpa.repositories.enabled=true

# SOLR (SolrProperties})
#spring.data.solr.host=http://127.0.0.1:8983/solr
#spring.data.solr.repositories.enabled=true

# ELASTICSEARCH (ElasticsearchProperties})
#spring.data.elasticsearch.cluster-name= # The cluster name (defaults to elasticsearch)
#spring.data.elasticsearch.cluster-nodes= # The address(es) of the server node (comma-separated; if not specified starts a client node)
#spring.data.elasticsearch.repositories.enabled=true # if spring data repository support is enabled

# FLYWAY (FlywayProperties)
#flyway.locations=classpath:db/migrations # locations of migrations scripts
#flyway.schemas= # schemas to update
#flyway.init-version= 1 # version to start migration
#flyway.sql-migration-prefix=V
#flyway.sql-migration-suffix=.sql
#flyway.enabled=true
#flyway.url= # JDBC url if you want Flyway to create its own DataSource
#flyway.user= # JDBC username if you want Flyway to create its own DataSource
#flyway.password= # JDBC password if you want Flyway to create its own DataSource

# LIQUIBASE (LiquibaseProperties)
liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
#liquibase.contexts=local
liquibase.enabled=true
#liquibase.default-schema=ignition
#liquibase.drop-first=false
#liquibase.url= # specific JDBC url (if not set the default datasource is used)
#liquibase.user= # user name for liquibase.url
#liquibase.password= # password for liquibase.url

# JMX
#spring.jmx.enabled=false

# RABBIT (RabbitProperties)
#spring.rabbitmq.host= # connection host
#spring.rabbitmq.port= # connection port
#spring.rabbitmq.addresses= # connection addresses (e.g. myhost:9999,otherhost:1111)
#spring.rabbitmq.username= # login user
#spring.rabbitmq.password= # login password
#spring.rabbitmq.virtual-host=
#spring.rabbitmq.dynamic=

# REDIS (RedisProperties)
#spring.redis.host=localhost # server host
#spring.redis.password= # server password
#spring.redis.port=6379 # connection port
#spring.redis.pool.max-idle=8 # pool settings ...
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1

# ACTIVEMQ (ActiveMQProperties)
#spring.activemq.broker-url=tcp://localhost:61616 # connection URL
#spring.activemq.user=
#spring.activemq.password=
#spring.activemq.in-memory=true # broker kind to create if no broker-url is specified
#spring.activemq.pooled=false

# HornetQ (HornetQProperties)
#spring.hornetq.mode= # connection mode (native, embedded)
#spring.hornetq.host=localhost # hornetQ host (native mode)
#spring.hornetq.port=5445 # hornetQ port (native mode)
#spring.hornetq.embedded.enabled=true # if the embedded server is enabled (needs hornetq-jms-server.jar)
#spring.hornetq.embedded.server-id= # auto-generated id of the embedded server (integer)
#spring.hornetq.embedded.persistent=false # message persistence
#spring.hornetq.embedded.data-directory= # location of data content (when persistence is enabled)
#spring.hornetq.embedded.queues= # comma-separated queues to create on startup
#spring.hornetq.embedded.topics= # comma-separated topics to create on startup
#spring.hornetq.embedded.cluster-password= # customer password (randomly generated by default)

# JMS (JmsProperties)
#spring.jms.pub-sub-domain= # false for queue (default), true for topic

# SPRING BATCH (BatchDatabaseInitializer)
#spring.batch.job.names=job1,job2
#spring.batch.job.enabled=true
#spring.batch.initializer.enabled=true
#spring.batch.schema= # batch schema to load

# AOP
#spring.aop.auto=true
#spring.aop.proxy-target-class=true

# FILE ENCODING (FileEncodingApplicationListener)
#spring.mandatory-file-encoding=false

# SPRING SOCIAL (SocialWebAutoConfiguration)
#spring.social.auto-connection-views=true # Set to true for default connection views or false if you provide your own

# SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)
#spring.social.facebook.app-id= # your application's Facebook App ID
#spring.social.facebook.app-secret= # your application's Facebook App Secret

# SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)
#spring.social.linkedin.app-id= # your application's LinkedIn App ID
#spring.social.linkedin.app-secret= # your application's LinkedIn App Secret

# SPRING SOCIAL TWITTER (TwitterAutoConfiguration)
#spring.social.twitter.app-id= # your application's Twitter App ID
#spring.social.twitter.app-secret= # your application's Twitter App Secret

# SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)
#spring.mobile.sitepreference.enabled=true # enabled by default

# SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)
#spring.mobile.devicedelegatingviewresolver.enabled=true # disabled by default
#spring.mobile.devicedelegatingviewresolver.normal-prefix=
#spring.mobile.devicedelegatingviewresolver.normal-suffix=
#spring.mobile.devicedelegatingviewresolver.mobile-prefix=mobile/
#spring.mobile.devicedelegatingviewresolver.mobile-suffix=
#spring.mobile.devicedelegatingviewresolver.tablet-prefix=tablet/
#spring.mobile.devicedelegatingviewresolver.tablet-suffix=

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.port= # defaults to 'server.port'
#management.address= # bind to a specific NIC
#management.context-path=# default to '/'
#management.add-application-context-header= # default to true

# ENDPOINTS (AbstractEndpoint subclasses)
#endpoints.autoconfig.id=autoconfig
#endpoints.autoconfig.sensitive=false
#endpoints.autoconfig.enabled=true
#
#endpoints.beans.id=beans
#endpoints.beans.sensitive=false
#endpoints.beans.enabled=true
#
#endpoints.configprops.id=configprops
#endpoints.configprops.sensitive=true
#endpoints.configprops.enabled=true
#endpoints.configprops.keys-to-sanitize=password,secret
#endpoints.dump.id=dump
#endpoints.dump.sensitive=false
#endpoints.dump.enabled=true
#endpoints.env.id=env
#endpoints.env.sensitive=true
#endpoints.env.enabled=true
#endpoints.health.id=health
#
#endpoints.health.sensitive=true
#endpoints.health.enabled=true
#
#endpoints.info.id=info
#endpoints.info.sensitive=true
#endpoints.info.enabled=true
#
#endpoints.metrics.id=metrics
#endpoints.metrics.sensitive=true
#endpoints.metrics.enabled=true
#endpoints.shutdown.id=shutdown
#endpoints.shutdown.sensitive=true
#endpoints.shutdown.enabled=true
#endpoints.trace.id=trace
#endpoints.trace.sensitive=true
#endpoints.trace.enabled=true

# MVC ONLY ENDPOINTS
#endpoints.jolokia.path=jolokia
#endpoints.jolokia.sensitive=true
#endpoints.jolokia.enabled=true # when using Jolokia

# JMX ENDPOINT (EndpointMBeanExportProperties)
#endpoints.jmx.enabled=false
#endpoints.jmx.domain= # the JMX domain, defaults to 'org.springboot'
#endpoints.jmx.unique-names=false
#endpoints.jmx.static-names=

# JOLOKIA (JolokiaProperties)
#jolokia.config.*= # See Jolokia manual

# REMOTE SHELL
#shell.auth=simple # jaas, key, simple, spring
#shell.command-refresh-interval=-1
#shell.command-path-patterns= # classpath*:/commands/**, classpath*:/crash/commands/**
#shell.config-path-patterns= # classpath*:/crash/*
#shell.disabled-plugins=false # don't expose plugins
#shell.ssh.enabled= # ssh settings ...
#shell.ssh.key-path=
#shell.ssh.port=
#shell.telnet.enabled= # telnet settings ...
#shell.telnet.port=
#shell.auth.jaas.domain= # authentication settings ...
#shell.auth.key.path=
#shell.auth.simple.user.name=
#shell.auth.simple.user.password=
#shell.auth.spring.roles=

# GIT INFO
#spring.git.properties= # resource ref to generated git info properties file


#spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
